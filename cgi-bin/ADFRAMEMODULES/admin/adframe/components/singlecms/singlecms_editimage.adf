use de::adframe::lib::xml::XMLConfiguration;
use de::adframe::components::singlecms::SingleCmsDbManager;
use de::adframe::lib::io::HttpUploader;
1;
sub common
{
	my $xmlfile 				= 'ADFRAMEMODULES/admin/channel/'.$ENV{ADFRAME_CHANNEL}.'/conf/general.xml';
	my $componentname 			= $in{componentname};
	my $IMAGE_FIELD				= $in{EDIT_IMAGE};
	my $IMAGE_UPLOADPATH		= configure($xmlfile,$componentname,$IMAGE_FIELD);
	my $cmsman	 				= new SingleCmsDbManager();

	if (($componentname ne '') && ($IMAGE_FIELD =~ /IMAGE_/))
	{
		my $uploadpath = "$ENV{ADFRAME_DOC_PATH}"."$IMAGE_UPLOADPATH";

		if (-e "$uploadpath")
		{
			if (($in{adframe_event} eq 'singlecms_editimage_form') && ($in{FILE_IMAGE} ne ''))
			{
				my $uploader 		= new HttpUploader();
				my $imagefilename 	= 'SINGLECMS_'.$componentname.'_'.$in{EDIT_IMAGE};
				my $dbFileName 		= $uploader->storeImage($uploadpath,$imagefilename,$in{FILE_IMAGE});
				if ($dbFileName ne '')
				{
					if ($cmsman->updateItem($componentname,$ENV{ADFRAME_CHANNEL},$in{EDIT_IMAGE},$dbFileName))
					{
						$adframe->internLocation("admin/adframe/components/singlecms/singlecms_edit.html?componentname=$componentname&EDIT_IMAGE=");
					}
					else
					{
						$adframe->showAlert('Die Datei konnte leider nicht erstellt werden');
					}
				}
				else
				{
					$adframe->showAlert('Die Datei konnte leider nicht erstellt werden.\nDer Zugriff auf das Server-Dateisystem ist nicht freigegeben !');
				}
			}

			my %cmsData = $cmsman->getCms($componentname,$ENV{ADFRAME_CHANNEL});
			$adframe->setValue('THE_IMAGE',$cmsData{"$in{EDIT_IMAGE}"});

		}
		else
		{
			$adframe->error('Project Configuration error! Uploadpath '.$uploadpath.' does not exist');
		}
	}
	else
	{
		$adframe->error('Project Configuration error');
	}
}

sub configure
{
	my $xmlfile			= shift;
	my $componentname	= shift;
	my $IMAGE_FIELD		= shift;
	my $retUploadPath	= '';

	if (my $conf = new XMLConfiguration($xmlfile))
	{

		# register from conf:
		$adframe->setValue('COMPONENTTITLE',$conf->getAttribute('title','configuration:admin:component','name',$componentname));
		$conf->setCursorAt('configuration:admin:component','name',$componentname);

		foreach my $c ($conf->enumElements())
		{
			my $tag		  	= $c->getTag();
			my $fieldname 	= $c->getAttribute('name');
			my $active  	= $c->getAttribute('active');
			my $required 	= $c->getAttribute('required');
			my $uploadpath 	= $c->getAttribute('uploadpath');
			my $width 		= $c->getAttribute('width');
			my $height 		= $c->getAttribute('height');
			my $title		= $c->getAttribute('title');

			if (($tag eq 'field') && ($active eq 'true') && ($fieldname eq $IMAGE_FIELD))
			{
				$adframe->setValue('IMAGE_UPLOADPATH',$uploadpath) if ($uploadpath ne '');
				$adframe->setValue('IMAGE_WIDTH',$width) if ($width ne '');
				$adframe->setValue('IMAGE_HEIGHT',$height) if ($height ne '');
				$adframe->setValue('IMAGE_TITLE',$title);
				$retUploadPath = $uploadpath;
				last;
			}
		}
		return $retUploadPath;
	}
	else
	{
		$adframe->error("Configuration error at $xmlconf");
		return 0;
	}
}