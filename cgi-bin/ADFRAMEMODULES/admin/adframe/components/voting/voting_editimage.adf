use de::adframe::lib::xml::XMLConfiguration;
use de::adframe::components::voting::gen::ListADFRAME_VOTING_CATEGORY;
use de::adframe::components::voting::gen::ClassADFRAME_VOTING_CATEGORY;
use de::adframe::lib::io::HttpUploader;
1;
sub common
{
	my $xmlfile 				= 'ADFRAMEMODULES/admin/channel/'.$ENV{ADFRAME_CHANNEL}.'/conf/general.xml';
	my $componentname 			= $in{componentname};
	my $voting				= new ClassADFRAME_VOTING_CATEGORY();
	my $list 				= new ListADFRAME_VOTING_CATEGORY();
	my $IMAGE_FIELD				= $in{EDIT_IMAGE};
	my $ADFRAME_VOTING_CATEGORY_ID		= $in{ADFRAME_VOTING_CATEGORY_ID};
	my $IMAGE_UPLOADPATH			= configure($xmlfile,$componentname,$IMAGE_FIELD);

	srand($$|time);
	my $rnd = rand($#prods)+10;
	$adframe->setValue('RANDOM',$rnd);
	
	#debug($componentname,$imgSize,$IMAGE_UPLOADPATH);
	
	$adframe->setValue('ADFRAME_VOTING_CATEGORY_ID',$ADFRAME_VOTING_CATEGORY_ID);

	if (($ADFRAME_VOTING_CATEGORY_ID > 0) && ($IMAGE_FIELD =~ /IMAGE/))
	{
		my $uploadpath = "$ENV{ADFRAME_DOC_PATH}"."$IMAGE_UPLOADPATH";

		if (-e "$uploadpath")
		{
			if (($in{adframe_event} eq 'voting_editimage_form') && ($in{FILE_IMAGE} ne ''))
			{
				my $uploader 		= new HttpUploader();
				
				my $tmpfilename 	= 'TEMP_VOTING_'.$in{EDIT_IMAGE}.'_'.$ADFRAME_VOTING_CATEGORY_ID;
				
				my $imagefilename 	= 'VOTING_'.$in{EDIT_IMAGE}.'_'.$ADFRAME_VOTING_CATEGORY_ID.'.jpg';
				
				
				
				my $dbTempName 		= $uploader->storeImage($uploadpath,$tmpfilename,$in{FILE_IMAGE});
				
				my $dbFileName		= $uploader->resize($uploadpath,$dbTempName,$imagefilename,$imgSize,yes);	
				
				if ($dbFileName ne '')
				{
					if ($voting->initById($in{ADFRAME_VOTING_CATEGORY_ID}))
					{
						$voting->setIMG($dbFileName);
						$voting->save();
					
					}
					else
					{
						$adframe->showAlert('Die Datei konnte leider nicht erstellt werden');
					}
				}
				else
				{
					$adframe->showAlert($voting->getErrorMessage());
				}
				$adframe->internLocation("/admin/adframe/components/voting/voting_edit.html?ADFRAME_VOTING_CATEGORY_ID=$in{ADFRAME_VOTING_CATEGORY_ID}");
			}

			$voting->initById($in{ADFRAME_VOTING_CATEGORY_ID});
			$adframe->setValue('THE_IMAGE',$voting->getIMG());
			
		}
		else
		{
			$adframe->error('Project Configuration error! Uploadpath '.$uploadpath.' does not exist');
		}
	}
	else
	{
		$adframe->error('Project Configuration error.');
	}
}

sub configure
{
	my $xmlfile			= shift;
	my $componentname	= shift;
	my $IMAGE_FIELD		= shift;
	my $retUploadPath	= '';
	$imgSize	= '';

	if (my $conf = new XMLConfiguration($xmlfile))
	{

		# register from conf:
		$adframe->setValue('COMPONENTTITLE',$conf->getAttribute('title','configuration:admin:component','name',$componentname));
		$conf->setCursorAt('configuration:admin:component','name',$componentname);

		foreach my $c ($conf->enumElements())
		{
			my $tag		  	= $c->getTag();
			my $fieldname 	= $c->getAttribute('name');
			my $active  	= $c->getAttribute('active');
			my $required 	= $c->getAttribute('required');
			my $uploadpath 	= $c->getAttribute('uploadpath');
			my $width 		= $c->getAttribute('width');
			my $height 		= $c->getAttribute('height');
			my $title		= $c->getAttribute('title');
			my $size		= $c->getAttribute('size');

			if (($tag eq 'field') && ($active eq 'true') && ($fieldname eq $IMAGE_FIELD))
			{
				$adframe->setValue('IMAGE_UPLOADPATH',$uploadpath) if ($uploadpath ne '');
				$adframe->setValue('IMAGE_WIDTH',$width) if ($width ne '');
				$adframe->setValue('IMAGE_HEIGHT',$height) if ($height ne '');
				$adframe->setValue('IMAGE_TITLE',$title);
				$retUploadPath = $uploadpath;
				$imgSize = $size;
				last;
			}
		}
		
		return $retUploadPath;
	}
	else
	{
		$adframe->error("Configuration error at $xmlconf");
		return 0;
	}
}